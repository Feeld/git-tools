#!/bin/bash

# helpers
bold() {
  echo "$(tput bold)$*" "$(tput sgr0)";
}

# Get name of current branch: https://stackoverflow.com/a/6245587
current_brach=$(git branch | grep \* | cut -d ' ' -f2)
origin_branch="origin/${current_brach}"

bold "checking if PR for ${current_brach} exists"

# Check for open PR for which head is the current branch.
PR=$(hub pr list -s open -h $current_brach -f "%i: '%t' -> (%B)")

if [ -z "$PR" ]
then
  echo "can't merge without an open PR"
  exit 1
else
  echo "merging PR: ${PR}"
fi

bold "calling git fetch to sync origin"
git fetch

local_head=$(git log "${current_brach}" | head -1)
origin_head=$(git log "${origin_branch}" | head -1)

if [ "$local_head" != "$origin_head" ]
then
  bold "'${current_brach}' is not in sync with '${origin_branch}', aborting merge!"
  # commits_missing_on_remote=$(git log "${origin_branch}..${current_brach}")
  # extra_commits_on_remote=$(git log "${current_brach}..${origin_branch}")
  exit 1
fi

base_brach=$(hub pr list -s open -h $current_brach -f %B)

bold "synchronising base branch (${base_brach})"

# see https://stackoverflow.com/a/17722977
git fetch origin "${base_brach}:${base_brach}"

bold "doing fast-forward merge of '$current_brach' into '${base_brach}'"
# see https://stackoverflow.com/a/17722977
git fetch . "${current_brach}:${base_brach}"

bold "pushing '${base_brach}'"
git push origin "${base_brach}:${base_brach}"
